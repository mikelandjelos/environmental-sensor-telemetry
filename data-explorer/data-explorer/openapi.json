{
  "components": {
    "schemas": {
      "AggregationType": {
        "enum": [
          "MIN",
          "MAX",
          "MEAN",
          "SUM"
        ],
        "title": "AggregationType",
        "type": "string"
      },
      "DataExplorerResponse": {
        "properties": {
          "inner_response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inner Response"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "DataExplorerResponse",
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "exception_message": {
            "title": "Exception Message",
            "type": "string"
          }
        },
        "required": [
          "exception_message"
        ],
        "title": "ErrorResponse",
        "type": "object"
      },
      "SensorData": {
        "properties": {
          "carbon_oxide": {
            "title": "Carbon Oxide",
            "type": "number"
          },
          "device": {
            "title": "Device",
            "type": "string"
          },
          "humidity": {
            "title": "Humidity",
            "type": "number"
          },
          "light": {
            "title": "Light",
            "type": "boolean"
          },
          "liquid_petroleum_gas": {
            "title": "Liquid Petroleum Gas",
            "type": "number"
          },
          "motion": {
            "title": "Motion",
            "type": "boolean"
          },
          "smoke": {
            "title": "Smoke",
            "type": "number"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "device",
          "carbon_oxide",
          "humidity",
          "light",
          "liquid_petroleum_gas",
          "motion",
          "smoke",
          "temperature"
        ],
        "title": "SensorData",
        "type": "object"
      },
      "SensorDataBatchBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SensorData"
            },
            "title": "Data",
            "type": "array"
          }
        },
        "title": "SensorDataBatchBody",
        "type": "object"
      },
      "ValidationErrorModel": {
        "properties": {
          "ctx": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional object which contains values required to render the error message.",
            "title": "Error context"
          },
          "loc": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "the error's location as a list. ",
            "title": "Location"
          },
          "msg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "a computer-readable identifier of the error type.",
            "title": "Message"
          },
          "type_": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "a human readable explanation of the error.",
            "title": "Error Type"
          }
        },
        "title": "ValidationErrorModel",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Environmental Sensor Telemetry - Data explorer API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/aggregateOverTimeSpan/{field_name}": {
      "get": {
        "operationId": "aggregate_over_time_span_aggregateOverTimeSpan__string_field_name__get",
        "parameters": [
          {
            "in": "path",
            "name": "field_name",
            "required": true,
            "schema": {
              "title": "Field Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Start Time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stop_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Stop Time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "window_duration",
            "required": true,
            "schema": {
              "format": "duration",
              "title": "Window Duration",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "aggregation_type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AggregationType"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to aggregate values of given field over a given time span.",
        "tags": [
          "aggregateOverTimeSpan"
        ]
      }
    },
    "/deleteForTimeSpan/{device}": {
      "delete": {
        "operationId": "delete_for_time_span_deleteForTimeSpan__string_device__delete",
        "parameters": [
          {
            "in": "path",
            "name": "device",
            "required": true,
            "schema": {
              "title": "Device",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Start Time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stop_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Stop Time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to values on given device taken during a given time span.",
        "tags": [
          "deleteForTimeSpan"
        ]
      }
    },
    "/ping": {
      "get": {
        "description": "Round-trip ping across the services:</br>    DataExplorer(Flask)<--ping/pong-->DataProvider(.NET Core)<--ping/pong-->InfluxDB",
        "operationId": "ping_ping_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to check status of all connected services.",
        "tags": [
          "ping"
        ]
      }
    },
    "/readFieldsOverTimeSpan/{field_name}": {
      "get": {
        "operationId": "read_fields_over_time_span_readFieldsOverTimeSpan__string_field_name__get",
        "parameters": [
          {
            "in": "path",
            "name": "field_name",
            "required": true,
            "schema": {
              "title": "Field Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Start Time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stop_time",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stop Time"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Size"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to read measurement fields over a given time span.",
        "tags": [
          "readFieldsOverTimeSpan"
        ]
      }
    },
    "/readMeasurementsOverTimeSpan": {
      "get": {
        "operationId": "readMeasurementsOverTimeSpan_readMeasurementsOverTimeSpan_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_time",
            "required": true,
            "schema": {
              "format": "date-time",
              "title": "Start Time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stop_time",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stop Time"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Size"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to read measurements over given a time span.",
        "tags": [
          "readMeasurementsOverTimeSpan"
        ]
      }
    },
    "/writeMeasurementsBatched": {
      "post": {
        "operationId": "write_measurements_batched_writeMeasurementsBatched_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorDataBatchBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to write batch of sensor measurements into DB.",
        "tags": [
          "writeMeasurementsBatched"
        ]
      }
    },
    "/writeMeasurementsStream": {
      "post": {
        "operationId": "write_measurements_stream_writeMeasurementsStream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorDataBatchBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExplorerResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Used to write batch of sensor measurements into DB, one by one in a stream.",
        "tags": [
          "writeMeasurementsStream"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "ping"
    },
    {
      "name": "writeMeasurementsBatched"
    },
    {
      "name": "writeMeasurementsStream"
    },
    {
      "name": "readMeasurementsOverTimeSpan"
    },
    {
      "name": "readFieldsOverTimeSpan"
    },
    {
      "name": "aggregateOverTimeSpan"
    },
    {
      "name": "deleteForTimeSpan"
    }
  ]
}
